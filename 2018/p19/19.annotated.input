#ip 4
addi 4 16 4 # 0:  ip = ip + 16      | ip = 16        
seti 1 8 1  # 1:  r1 = 1            | r1 = 1         
seti 1 3 5  # 2:  r5 = 1            | r5 = 1         
mulr 1 5 3  # 3:  r3 = r1 * r5      | r3 = r1 * r5   
eqrr 3 2 3  # 4:  r3 = r3 == r2     | r3 = r3 == r2  
addr 3 4 4  # 5:  ip = r3 + ip      | ip = r3 + 5    
addi 4 1 4  # 6:  ip = ip + 1       | ip = 7         
addr 1 0 0  # 7:  r0 = r1 + r0      | r0 = r1 + r0   
addi 5 1 5  # 8:  r5 = r5 + 1       | r5 = r5 + 1    
gtrr 5 2 3  # 9:  r3 = r5 > r2      | r3 = r5 > r2   
addr 4 3 4  # 10: ip = ip + r3      | ip = 10 + r3   
seti 2 2 4  # 11: ip = 2            | ip = 2         
addi 1 1 1  # 12: r1 = r1 + 1       | r1 = r1 + 1    
gtrr 1 2 3  # 13: r3 = r1 > r2      | r3 = r1 > r2   
addr 3 4 4  # 14: ip = r3 + ip      | ip = r3 + 14   
seti 1 4 4  # 15: ip = 1            | ip = 1         
mulr 4 4 4  # 16: ip = ip * ip      | ip = 256       
addi 2 2 2  # 17: r2 = r2 + 2       | r2 = r2 + 2    
mulr 2 2 2  # 18: r2 = r2 * r2      | r2 = r2 * r2   
mulr 4 2 2  # 19: r2 = ip * r2      | r2 = 19 * r2   
muli 2 11 2 # 20: r2 = r2 * 11      | r2 = r2 * 11   
addi 3 6 3  # 21: r3 = r3 + 6       | r3 = r3 + 6    
mulr 3 4 3  # 22: r3 = r3 * ip      | r3 = r3 * 22   
addi 3 8 3  # 23: r3 = r3 + 8       | r3 = r3 + 8    
addr 2 3 2  # 24: r2 = r2 + r3      | r2 = r2 + r3   
addr 4 0 4  # 25: ip = ip + r0      | ip = 25 + r0   
seti 0 1 4  # 26: ip = 0            | ip = 0         
setr 4 4 3  # 27: r3 = ip           | r3 = 27        
mulr 3 4 3  # 28: r3 = r3 * ip      | r3 = r3 * 28   
addr 4 3 3  # 29: r3 = ip + r3      | r3 = 29 + r3   
mulr 4 3 3  # 30: r3 = ip * r3      | r3 = 30 * r3   
muli 3 14 3 # 31: r3 = r3 * 14      | r3 = r3 * 14   
mulr 3 4 3  # 32: r3 = r3 * ip      | r3 = r3 * 32   
addr 2 3 2  # 33: r2 = r2 + r3      | r2 = r2 + r3   
seti 0 4 0  # 34: r0 = 0            | r0 = 0         
seti 0 7 4  # 35: ip = 0            | ip = 0         

# ===================================
0:    ip = 16        

1:    r1 = 1         
2:    r5 = 1         
3:    r3 = r1 * r5   # eventually, r5 is incremented so r5 == r2 so when r1 = 1, r3 == r2, r0 is incremented by r1, r5 is incremented again so that r5 > r2 and then r1 is incremented. Once r1 > r2, the program exits. Otherwise, reset r5 back to 1. Keep looping r5 up to r2: if r1 * r5 == r2, increase r0 by r1. When r5 > r2, increment r1 again and continue looping. r1 is the left factor of r2 and is looped from 1 to r2. r0 is the sum of left factors r1.
4:    r3 = r3 == r2  #
5:    ip = r3 + 5    # jump to 7 if r3 == r2 else jump to 8

6:    ip = 7         

7:    r0 = r1 + r0   # r0 += r1 if r3 == r2
8:    r5 = r5 + 1    # increment r5 until r5 > r2
9:    r3 = r5 > r2   
10:   ip = 10 + r3   # jump to 3 if r5 <= r2 else jump to 12 to make progress

11:   ip = 2         

12:   r1 = r1 + 1    # make progress
13:   r3 = r1 > r2   
14:   ip = r3 + 14   # exit program when r1 > r2, otherwise jump back to 2

15:   ip = 1         # restore r5 = 1 while r1 <= r2

16:   ip = 256       # exit program when r1 > r2

17:   r2 = r2 + 2    # (r2, r3)
18:   r2 = r2 * r2   
19:   r2 = 19 * r2   
20:   r2 = r2 * 11   # r2 = (r2 + 2) * (r2 + 2) * 209
21:   r3 = r3 + 6    
22:   r3 = r3 * 22   
23:   r3 = r3 + 8    # r3 = 22 * (r3 + 6) + 8
24:   r2 = r2 + r3   # r2 = (r2 + 2) * (r2 + 2) * 209 + 22 * (r3 + 6) + 8

25:   ip = 25 + r0   

26:   ip = 0         

27:   r3 = 27        
28:   r3 = r3 * 28   
29:   r3 = 29 + r3   
30:   r3 = 30 * r3   
31:   r3 = r3 * 14   
32:   r3 = r3 * 32   # r3 = 10550400
33:   r2 = r2 + r3   # r2 = r2 + 10550400, r2 = 10551376
34:   r0 = 0         
35:   ip = 0         # jump to 1

# =====================
[1, 0, 0, 0, 0, 0]
[1, 0, 2, 0, 17, 0]
[1, 0, 4, 0, 18, 0]
[1, 0, 76, 0, 19, 0]
[1, 0, 836, 0, 20, 0]
[1, 0, 836, 6, 21, 0]
[1, 0, 836, 132, 22, 0]
[1, 0, 836, 140, 23, 0]
[1, 0, 976, 140, 24, 0]
[1, 0, 976, 140, 27, 0]
[1, 0, 976, 27, 27, 0]
[1, 0, 976, 756, 28, 0]
[1, 0, 976, 785, 29, 0]
[1, 0, 976, 23550, 30, 0]
[1, 0, 976, 329700, 31, 0]
[1, 0, 976, 10550400, 32, 0]
[1, 0, 10551376, 10550400, 33, 0]
[0, 0, 10551376, 10550400, 34, 0]
[0, 0, 10551376, 10550400, 1, 0]
